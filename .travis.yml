language: c
sudo: true

compiler:
  - gcc
  - clang

env:
  global:
    - CTEST_OUTPUT_ON_FAILURE=TRUE
    # Coverity key
    - secure: "KgZwBsk2jUpJcOJkNndXDvzJ1pe4uVSHUtfNVGgl+uZTyEVmCr8/1xi4u6bQwpBTsB3zku/XbvoT57MPfXrosxgE9jI4W1fdnVDeA/gbXtEXBfseEVz+D4oKiBGh5BR3ARU8b2gkpooL7OU9bK2QZ9LiKtXAJ3jaUJUBlFlHf6ulJKG33YX6IjaJ4kQm4e0adhEd8+iiONo/EVCtcXJqsFiphyRd8+jZL3WgVUOdU69yB0tChi+caUIdWnaFxQdD9CkJgBJB8naJW2qT/Y7LnVdFpcLC60mOEw4WvaNOqnKaKm4VZP3638Q5im9OZEXjtLhz2mPOiL3UwDhb+V+8UHML0lrMaftRpgPMZXTnYO8b2AwaI1OmIY0/s3DANF3RiBnxdlZebXBptu1d3CgQxRtjcIuOZJiNGNx7fW6fB9X+TrzyYL0Lc/vctPctRtMM/+lFFLGPcfRochoggF2gkGJ7iKrihhHpkGB0UniYepFZFG4Rhniz1oqICMpwAbjQ8PRs9y6r+sqmhut9uvhCKUpYwIQcjdws+WFviBJPe0q13SUpW3bQfShWpZ77aimYhEONoSdBq1189nTcTyVU8QksLJlc2fKRgXAHXGg91laO/YtpFVfLBzisbIIDtWtIA6m/piGUdMnNVt1TprOaaEns+ygIAoL6o+sVTbzyBM0="

  matrix:
    - COVERAGE="ENABLE_COVERAGE=ON"
    - COVERAGE="ENABLE_COVERAGE=OFF"

matrix:
  exclude:

before_install:
      - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

addons:
  coverity_scan:
    project:
      name: "ErwinJanssen/elegan-c"
      description: "Build submitted via Travis CI"
    notification_email: erwinjanssen@outlook.com
    build_command_prepend: "cd ${TRAVIS_BUILD_DIR}; mkdir build; cd build; cmake .."
    build_command:   "cmake --build ."
    branch_pattern: coverity-scan

install:
  # Install the Criterion unit testing framework
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir dependencies
  - cd dependencies
  - wget https://github.com/Snaipe/Criterion/releases/download/v2.3.0/criterion-v2.3.0-linux-x86_64.tar.bz2 -O criterion.tar.bz2
  - tar xvjf criterion.tar.bz2
  - mv criterion-v2.3.0/* .
  - sudo cp lib/libcriterion.so /usr/local/lib/libcriterion.so
  - sudo cp lib/libcriterion.so.3 /usr/local/lib/libcriterion.so.3
  - sudo cp lib/libcriterion.so.3.1.0 /usr/local/lib/libcriterion.so.3.1.0
  - sudo ldconfig

script:
  - cd ${TRAVIS_BUILD_DIR}
  - rm -R build || true
  - mkdir build
  - cd build
  - cmake -D${COVERAGE} ..
  - cmake --build .
  - ctest
  - if [ ${COVERAGE} == "ENABLE_COVERAGE=ON" ] ; then make gcov ; fi

after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - if [ ${COVERAGE} == "ENABLE_COVERAGE=ON" ] ; then bash <(curl -s https://codecov.io/bash) ; fi
